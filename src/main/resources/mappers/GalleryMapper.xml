<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="GalleryMapper">

	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
	<resultMap id="galleryMap"
		type="project.star.b2.model.Gallery">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="roomno" column="roomno" />
		<result property="roomtype" column="roomtype" />
		<result property="title" column="title" />
		<result property="floor" column="floor" />
		<result property="area" column="area" />
		<result property="fee" column="fee" />
		<result property="confirmdate" column="confirmdate" />
		<result property="priceno" column="priceno" />
		<result property="deposit" column="deposit" />
		<result property="dealingtype" column="dealingtype" />
		<result property="price" column="price" />
	</resultMap>

	<!-- 갤러리용 다중행 조회를 위한 기능 정의 -->
	<select id="selectList"
		parameterType="project.star.b2.model.Gallery" resultMap="galleryMap">
		SELECT
		r.roomno, r.roomtype, r.title, r.floor, r.area, r.fee, DATE_FORMAT(confirmdate,
		'%Y.%m.%d') AS confirmdate, p.dealingtype, p.deposit, p.price,
		r.region_2depth_name
		FROM room AS r
		INNER JOIN (SELECT * FROM price GROUP BY roomno) AS p
		ON r.roomno=p.roomno
		<where>
			<if
				test="monthFrom != 0 or monthTo != 999999 or depositFrom != 0 or depositTo != 999999">
				p.price between #{monthFrom} and #{monthTo} AND p.dealingtype="월세"
				AND ((p.price BETWEEN #{depositFrom} and #{depositTo} AND
				p.dealingtype="전세") OR (p.deposit BETWEEN #{depositFrom} and
				#{depositTo}))
			</if>

			<if test="buyingFrom != 0 or buyingTo != 999999">
				OR p.price between #{buyingFrom} and #{buyingTo} AND
				p.dealingtype="매매"
			</if>

			<if test="feeFrom != 0 or feeTo != 999999">
				AND r.fee between #{feeFrom} and #{feeTo}
			</if>

			<if test="sizeFrom != 0 or sizeTo != 999999">
				AND r.area between #{sizeFrom} and #{sizeTo}
			</if>

			<if test="roomtype != null and roomtype != ''">
				AND r.roomtype LIKE concat('%', #{roomtype}, '%')
			</if>
			<if test="dealingtype != null and dealingtype != ''">
				AND p.dealingtype LIKE concat('%', #{dealingtype}, '%')
			</if>
			<if test="region_2depth_name != null and region_2depth_name != ''">
				AND region_2depth_name LIKE concat('%', #{region_2depth_name}, '%')
			</if>
		</where>
		ORDER BY r.roomno ASC

		<if test="listCount > 0">
			LIMIT #{offset}, #{listCount}
		</if>
	</select>

	<!-- 조건에 맞는 데이터 수를 집계하여 int 타입으로 반환한다. count, max, min, sum, avg 함수를 사용한 
		경우 Mapper에서는 resultMap이 아닌 resultType으로 반환한다. -->
	<select id="selectCountAll"
		parameterType="project.star.b2.model.Gallery" resultType="int">
		SELECT COUNT(*) FROM room AS r
		INNER JOIN (SELECT * FROM price GROUP BY roomno) AS p
		ON r.roomno=p.roomno
		<where>
			<if
				test="monthFrom != 0 or monthTo != 999999 or depositFrom != 0 or depositTo != 999999">
				p.price between #{monthFrom} and #{monthTo} AND p.dealingtype="월세"
				AND ((p.price BETWEEN #{depositFrom} and #{depositTo} AND
				p.dealingtype="전세") OR (p.deposit BETWEEN #{depositFrom} and
				#{depositTo}))
			</if>

			<if test="buyingFrom != 0 or buyingTo != 999999">
				OR p.price between #{buyingFrom} and #{buyingTo} AND
				p.dealingtype="매매"
			</if>

			<if test="feeFrom != 0 or feeTo != 999999">
				AND r.fee between #{feeFrom} and #{feeTo}
			</if>

			<if test="sizeFrom != 0 or sizeTo != 999999">
				AND r.area between #{sizeFrom} and #{sizeTo}
			</if>

			<if test="roomtype != null and roomtype != ''">
				AND r.roomtype LIKE concat('%', #{roomtype}, '%')
			</if>
			<if test="dealingtype != null and dealingtype != ''">
				AND p.dealingtype LIKE concat('%', #{dealingtype}, '%')
			</if>
			<if test="region_2depth_name != null and region_2depth_name != ''">
				AND region_2depth_name LIKE concat('%', #{region_2depth_name}, '%')
			</if>
		</where>
		ORDER BY r.roomno ASC

		<if test="listCount > 0">
			LIMIT #{offset}, #{listCount}
		</if>
	</select>

	<select id="selectCountGu"
		parameterType="project.star.b2.model.Gallery" resultType="int">
		SELECT COUNT(roomno) FROM room WHERE
		region_2depth_name=#{region_2depth_name};
	</select>

	<select id="selectGu"
		parameterType="project.star.b2.model.Gallery" resultMap="galleryMap">
		SELECT region_2depth_name FROM room GROUP BY region_2depth_name ORDER BY
		region_2depth_name;
	</select>

	<!-- 지도에 매물 위치를 찍기 위한 다중행 조회 기능 정의 -->
	<select id="selectPositionList"
		parameterType="project.star.b2.model.Gallery" resultMap="galleryMap">
		SELECT
		roomno, roomtype, latitude, longitude, region_2depth_name
		FROM room;
	</select>

	<!-- 인기매물용 다중행 조회를 위한 기능 정의 -->
	<select id="selectfameList"
		parameterType="project.star.b2.model.Gallery" resultMap="galleryMap">
		<!-- SELECT r.roomno, roomtype, title, floor, area, fee, price, dealingtype, 
			deposit, count(heartno), filename FROM room r INNER JOIN heart h ON r.roomno 
			= h.roomno INNER JOIN price p ON r.roomno = p.roomno INNER JOIN image i ON 
			r.roomno = i.roomno GROUP BY roomno ORDER BY count(heartno) DESC -->
		<!-- SELECT h.roomno, count(h.roomno), r.roomtype, r.title, r.floor, r.area, 
			r.fee, p.price, p.dealingtype, p.deposit, i.filename FROM heart h INNER JOIN 
			room r ON h.roomno=r.roomno INNER JOIN image i ON h.roomno=i.roomno INNER 
			JOIN price p ON h.roomno=p.roomno Group by h.roomno order by count(h.roomno) 
			DESC -->
		SELECT
		h.roomno,count(h.roomno),r.roomtype,r.title,r.floor,r.area,r.fee,a.price,a.dealingtype,a.deposit,b.filename
		FROM heart h
		INNER JOIN room r ON h.roomno=r.roomno
		INNER JOIN (
		SELECT * FROM price p group by p.roomno)A ON r.roomno=a.roomno
		INNER JOIN (
		SELECT * FROM image i group by i.roomno)B ON
		r.roomno=b.roomno
		group by roomno
		order by count(h.roomno)
		DESC
		<if test="listCount > 0">
			LIMIT #{offset}, #{listCount}
		</if>
	</select>

	<!-- 찜목록을 보여주기 위한 기능 정의 -->
	<select id="selectHeartList"
		parameterType="project.star.b2.model.Gallery" resultMap="galleryMap">
		SELECT u.userno, r.title,r.roomtype, r.floor, r.area, r.fee, a.price,
		a.dealingtype, a.deposit, b.filename, h.roomno,h.heartno
		from user u INNER JOIN heart h ON u.userno=h.userno
		INNER JOIN room r ON r.userno=u.userno
		INNER JOIN (SELECT * FROM price p)a ON r.roomno=a.roomno
		INNER JOIN (SELECT * FROM image i)b ON r.roomno=b.roomno
		WHERE u.userno=24
		<if test="listCount > 0">
			LIMIT #{offset}, #{listCount}
		</if>
	</select>

	<!-- 쿠키용 다중행 조회를 위한 기능 정의 -->
	<select id="cookieList"
		parameterType="project.star.b2.model.Gallery" resultMap="galleryMap">
		SELECT
		r.roomno, r.roomtype, r.title, r.floor, r.area, r.fee, DATE_FORMAT(confirmdate,
		'%Y.%m.%d') AS confirmdate, p.dealingtype, p.deposit, p.price
		FROM room AS r
		INNER JOIN price AS p
		ON r.roomno=p.roomno
		WHERE r.roomno IN
		<foreach item="input" index="index" collection="list">
			#{item}
		</foreach>
		<!-- <where> <if test="roomno != null and roomno != ''"> IN r.roomno = 
			#{roomno} </if> </where> -->
	</select>

</mapper>